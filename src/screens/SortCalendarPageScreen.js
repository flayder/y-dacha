import React, {useLayoutEffect, useState, useEffect} from "react"
import {View, StyleSheet, Dimensions} from "react-native"
import {AppTextBold} from "@root/ui/AppTextBold";
import {AppWrap} from "../ui/AppWrap";
import {AppDrawerContentHandler} from "../drawers/paramsFunctions/AppDrawerContentHandler";
import {createDrawerNavigator} from "@react-navigation/drawer"
import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';
import BottomMenu from "@root/ui/bottomMenu"
import {createStackNavigator} from "@react-navigation/stack";
import {mainHeader} from "../globalHeaders";
import AppIndicator from "../ui/AppIndicator";
import AppCalendarListItem from "../ui/sortCalendarPageScreen/AppCalendarListItem";
import {Svg, Path} from "react-native-svg";
import {THEME} from "../../theme";
import AppCalendarYear from "../ui/sortCalendarPageScreen/AppCalendarYear";
import AppCalendarPeriod from "../ui/sortCalendarPageScreen/AppCalendarPeriod";
import {AppFetch} from "../AppFetch";
import {useDispatch, useSelector} from "react-redux";
import {setCurrentRoute} from "../store/actions/other";
import {globalRouteFun} from "../../global";

const pageWrapper = ({navigation, route}) => {
    let id = 0
    if(route.params !== undefined) {
        if(route.params.hasOwnProperty('sortId')) {
            id = route.params.sortId
        }
    }

    if(id === 0) {
       return (
           <AppTextBold>
               Неверные данные!
           </AppTextBold>
       )
    }
    const [screenWidth, setScreenWidth] = useState(Dimensions.get('screen').width)
    Dimensions.addEventListener('change', () => {
        setScreenWidth(Dimensions.get('screen').width)
    })

    useLayoutEffect(() => {
        navigation.setOptions(
            mainHeader(
                {
                    route,
                    navigation,
                    headerLeftBack: true,
                    routeName: "SortDetailPageScreen"
                }),
            [navigation])
    })

    const init = true
    const [data, setData] = useState([])
    const [year, setYear] = useState("1")

    const getDataCurrentYear = () => {
        let res = false
        if(data && year && data.hasOwnProperty('years') && data.years.hasOwnProperty(year)) res = data.years[year]

        //console.log('aksjdakjhsd', res)
        return res
    }

    useEffect(() => {
        AppFetch.getWithToken("getCalendar", {
            sort_id: id
        }, {}, navigation).then(response => {
            if(response.result) setData(response.data)
        })
    }, [init])

    //console.log('data', data)
    const svgColor = THEME.GREY_TEXT
    return (
        <AppWrap scroll={{paddingLeft: 0, paddingRight: 0}}>
            <AppTextBold style={styles.title}>
                Календарь растения
            </AppTextBold>
            <View style={styles.container}>
                <View style={styles.actionList}>
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M14.3887 13.1959C14.3929 13.1204 14.395 13.0448 14.395 12.9691C14.395 10.8783 12.8233 9.14782 10.7993 8.8967C11.1292 3.31797 11.9485 0.862974 11.9574 0.836876C12.0706 0.507629 11.8959 0.148706 11.5668 0.0348884C11.2373 -0.0791822 10.8777 0.0956699 10.7637 0.425212C10.7269 0.531537 9.96051 2.80179 9.59291 7.983L8.80932 7.33002C9.20146 6.37494 8.85082 5.07651 8.12254 4.34823C6.41931 2.645 4.1094 2.96516 4.01179 2.97955C3.73672 3.02038 3.5207 3.23636 3.47987 3.51147C3.46539 3.60896 3.14523 5.91899 4.84855 7.62227C5.37028 8.14396 6.18439 8.47186 6.95544 8.47186C7.30569 8.47186 7.6469 8.40384 7.94786 8.25588L8.94894 9.09016C7.76951 9.49706 6.82369 10.427 6.4111 11.6307C6.30979 11.6213 6.20796 11.6167 6.10593 11.6167C4.27091 11.6167 2.77798 13.1096 2.77798 14.9446C2.77798 14.963 2.77814 14.9814 2.77844 14.9998C2.6538 14.9797 2.52698 14.9695 2.39919 14.9695C1.07626 14.9695 0 16.0457 0 17.3687C0 17.7173 0.282693 18 0.631387 18H16.3021C16.5213 18 16.7249 17.8863 16.8398 17.6996C17.1261 17.2346 17.2774 16.6993 17.2774 16.1516C17.2774 14.5441 15.9877 13.2321 14.3887 13.1959Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        year={getDataCurrentYear()}
                        data={data}
                        id={"1"}
                        //text={"Посадка в грунт"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="14" height="19" viewBox="0 0 14 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M0.997563 15.9072C0.446613 15.9072 0 17.371 0 17.922C0 18.4729 0.446613 18.9195 0.997563 18.9195C1.54851 18.9195 1.99513 18.4729 1.99513 17.922C1.99513 17.371 1.54851 15.9072 0.997563 15.9072Z"
                                      fill={color}/>
                                <Path d="M5.02002 13.4033C4.46907 13.4033 4.02246 14.8671 4.02246 15.418C4.02246 15.969 4.46907 16.4156 5.02002 16.4156C5.57098 16.4156 6.01759 15.969 6.01759 15.418C6.01759 14.8671 5.57094 13.4033 5.02002 13.4033Z"
                                      fill={color}/>
                                <Path d="M2.38721 10.1143C1.83626 10.1143 1.38965 11.578 1.38965 12.129C1.38965 12.6799 1.83626 13.1265 2.38721 13.1265C2.93812 13.1265 3.38478 12.6799 3.38478 12.129C3.38478 11.578 2.93812 10.1143 2.38721 10.1143Z"
                                      fill={color}/>
                                <Path d="M13.1125 0.919434H2.90225C2.57817 0.919434 2.31543 1.18217 2.31543 1.50626V6.353C2.31543 6.46497 2.34743 6.57459 2.40772 6.66895L4.69313 10.246C4.80095 10.4148 4.98736 10.5169 5.18766 10.5169H13.1125C13.4366 10.5169 13.6993 10.2541 13.6993 9.93005V1.50626C13.6993 1.18217 13.4366 0.919434 13.1125 0.919434Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        year={getDataCurrentYear()}
                        data={data}
                        id={"2"}
                        //text={"Посадка на рассаду"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="13" height="19" viewBox="0 0 13 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M1.57732 9.68245H4.87963L4.00856 8.95653C3.75474 9.07848 3.46307 9.14168 3.14589 9.14168C3.02275 9.14168 2.89573 9.1322 2.76572 9.11305C2.19149 9.02849 1.62438 8.75374 1.24881 8.37816C-0.268696 6.8607 0.0165606 4.80249 0.0294456 4.71563C0.0679026 4.4565 0.271368 4.25307 0.530457 4.21461C0.617323 4.20173 2.67553 3.91647 4.19304 5.43398C4.839 6.0799 5.15204 7.22687 4.81719 8.08216L5.90089 8.98527C5.6207 3.90153 4.87741 1.66178 4.86568 1.62725C4.75895 1.31705 4.92352 0.978949 5.2336 0.871666C5.54399 0.764383 5.88269 0.928915 5.99001 1.23935C6.01943 1.32435 6.57551 2.97134 6.92249 6.66417L7.89784 5.85138C7.56294 4.99609 7.87603 3.84911 8.52195 3.20315C10.0395 1.68569 12.0977 1.97094 12.1845 1.98383C12.4436 2.02228 12.647 2.22571 12.6855 2.48484C12.6984 2.57171 12.9836 4.62991 11.4661 6.14738C10.999 6.61453 10.2699 6.9078 9.57845 6.9078C9.27218 6.9078 8.97337 6.84999 8.70797 6.72443L7.03929 8.11499C7.07271 8.60819 7.10201 9.13038 7.126 9.68237H11.4565C11.7849 9.68237 12.0512 9.94864 12.0512 10.2771V12.8265C12.0512 13.155 11.7849 13.4212 11.4565 13.4212H10.9454L9.47755 18.4119C9.40309 18.665 9.17084 18.8388 8.907 18.8388H4.12675C3.86294 18.8388 3.63065 18.665 3.55619 18.4119L2.08837 13.4212H1.57728C1.24885 13.4212 0.982585 13.155 0.982585 12.8265V10.2771C0.982625 9.94868 1.24889 9.68245 1.57732 9.68245Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        id={"3"}
                        screenWidth={screenWidth}
                        year={getDataCurrentYear()}
                        data={data}
                        //text={"Высадка рассады"}
                    />
                    <AppCalendarListItem
                        //activeIs={true}
                        //bgColor={THEME.YELLOW}
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="15" height="19" viewBox="0 0 15 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M14.5988 5.95781C14.5988 5.21917 14.198 4.56713 13.5921 4.22089C13.7757 3.54761 13.5981 2.80317 13.0758 2.28089C12.5535 1.75857 11.8091 1.58097 11.1358 1.76453C10.7895 1.15865 10.1375 0.757812 9.39885 0.757812C8.66021 0.757812 8.00821 1.15861 7.66193 1.76449C6.98869 1.58097 6.24413 1.75861 5.72189 2.28085C5.19961 2.80317 5.02197 3.54761 5.20557 4.22085C4.59969 4.56713 4.19889 5.21917 4.19889 5.95777C4.19889 6.69637 4.59969 7.34841 5.20557 7.69469C5.02197 8.36797 5.19961 9.11241 5.72193 9.63473C6.07109 9.98389 6.51965 10.1781 6.97973 10.2143C6.79497 11.1645 6.58693 12.4992 6.42357 14.264L5.30833 13.3346C5.45145 12.6674 5.55261 11.3852 4.57537 10.4079C2.97785 8.81041 0.662491 8.94257 0.564651 8.94897L0.0395311 8.98337L0.00513123 9.50845C-0.00126877 9.60621 -0.133389 11.9217 1.46409 13.5192C2.12601 14.1811 2.90197 14.3587 3.54445 14.3587C3.93373 14.3587 4.27373 14.2934 4.50977 14.2312L6.30641 15.7284C6.26745 16.3011 6.23373 16.9109 6.20669 17.5578H1.99885C1.66749 17.5578 1.39885 17.8264 1.39885 18.1578C1.39885 18.4891 1.66749 18.7578 1.99885 18.7578H11.5989C11.9302 18.7578 12.1988 18.4891 12.1988 18.1578C12.1988 17.8264 11.9302 17.5578 11.5989 17.5578H7.40765C7.54325 14.3693 7.85009 12.1187 8.11401 10.6914C8.46285 10.9836 8.91201 11.1578 9.39885 11.1578C10.1375 11.1578 10.7895 10.757 11.1358 10.1511C11.8089 10.3346 12.5535 10.157 13.0758 9.63473C13.5981 9.11241 13.7757 8.36797 13.5921 7.69469C14.198 7.34845 14.5988 6.69645 14.5988 5.95781ZM9.39885 7.75781C8.40473 7.75781 7.59885 6.95193 7.59885 5.95781C7.59885 4.96369 8.40473 4.15781 9.39885 4.15781C10.393 4.15781 11.1988 4.96369 11.1988 5.95781C11.1988 6.95193 10.393 7.75781 9.39885 7.75781Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        id={"4"}
                        year={getDataCurrentYear()}
                        data={data}
                        text={"Цветение"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="18" height="13" viewBox="0 0 18 13" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M5.82358 6.47159L11.8617 7.72901L16.9191 1.67006C17.0679 1.48832 17.0986 1.23709 16.998 1.02484C16.8975 0.812587 16.6836 0.677246 16.4487 0.677246H5.18986C5.00343 0.677246 4.82728 0.762827 4.71204 0.909393C4.5968 1.05596 4.55522 1.2473 4.59919 1.42851L5.82358 6.47159Z"
                                      fill={color}/>
                                <Path d="M15.4446 7.55509C14.4308 7.55509 13.5531 8.14852 13.1404 9.00628L4.95126 7.24616L3.47178 1.14284C3.40569 0.870212 3.16159 0.678223 2.88106 0.678223H0.607819C0.272141 0.678223 0 0.950364 0 1.28604C0 1.62172 0.272141 1.89386 0.607819 1.89386H2.40299L3.85973 7.90341C3.91468 8.13017 4.09459 8.30542 4.32273 8.35445L5.35262 8.57582L6.88039 11.7733C6.98133 11.9846 7.19467 12.119 7.42881 12.119C7.66294 12.119 7.87628 11.9846 7.97722 11.7733L9.11826 9.38519L12.8914 10.1962C12.9369 11.5656 14.0643 12.6658 15.4446 12.6658C16.8536 12.6658 17.9999 11.5195 17.9999 10.1104C17.9999 8.7014 16.8537 7.55509 15.4446 7.55509ZM7.42885 10.1014L6.85409 8.89853L7.8965 9.12257L7.42885 10.1014ZM15.4446 11.4501C14.8296 11.4501 14.3103 11.0333 14.1536 10.4674L15.2574 10.7047C15.3005 10.714 15.3434 10.7184 15.3857 10.7184C15.6661 10.7184 15.9181 10.5233 15.9794 10.2382C16.0499 9.90998 15.841 9.58675 15.5128 9.5162L14.3973 9.27643C14.643 8.96855 15.021 8.77077 15.4446 8.77077C16.1833 8.77077 16.7843 9.37178 16.7843 10.1104C16.7844 10.8491 16.1834 11.4501 15.4446 11.4501Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        id={"5"}
                        year={getDataCurrentYear()}
                        data={data}
                        //text={"Сбор урожая"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M17.9952 4.7494C17.9779 4.52879 17.8376 4.33682 17.6327 4.2533C17.4278 4.16973 17.1933 4.2089 17.0267 4.35453C16.1966 5.07998 15.0651 5.42062 13.9999 5.56754C13.8687 5.98093 13.7759 6.36297 13.7135 6.66051C13.7192 6.70037 13.7233 6.74048 13.7275 6.7805C13.768 7.16979 13.7371 7.56556 13.6339 7.94389C13.607 8.04239 13.5753 8.13933 13.5391 8.2344C13.3815 8.64768 13.1373 9.02558 12.8228 9.34005C12.7841 9.37879 12.7444 9.41628 12.7041 9.45271C12.7707 9.45544 12.8382 9.45724 12.9072 9.45724C13.4945 9.45724 14.1663 9.35339 14.892 9.06061C16.5996 8.37156 17.3541 7.25086 17.6863 6.43202C18.0453 5.54705 18.0014 4.82843 17.9952 4.7494Z"
                                      fill={color}/>
                                <Path d="M15.1221 1.79304C15.3047 1.66805 15.4012 1.4508 15.3716 1.23152C15.3418 1.01224 15.191 0.828494 14.9817 0.756636C14.9067 0.730888 14.2219 0.508838 13.2753 0.63539C12.3994 0.752539 11.1258 1.20315 10.032 2.68456C9.1378 3.89561 8.97118 5.08704 8.99751 5.90101C8.77609 6.19281 8.64544 6.53178 8.60549 6.87948L7.44574 6.9156L7.14329 6.92501C6.71101 6.45922 6.01946 6.30212 5.41658 6.56689L0.34992 8.79152C0.196724 8.85878 0.0796524 8.98841 0.028275 9.14765C-0.0231024 9.3069 -0.00387003 9.4805 0.0811348 9.6246L0.941365 11.0829C0.941404 11.083 0.941404 11.0831 0.941443 11.0831C0.941482 11.0832 0.94156 11.0833 0.941599 11.0833L1.03269 11.2377C1.14091 11.4212 1.33538 11.5257 1.53698 11.5257C1.61579 11.5257 1.69568 11.5097 1.77195 11.4763L6.64551 9.33643C7.04045 9.16302 7.3429 8.82816 7.47535 8.4176C7.51065 8.30822 7.53262 8.1961 7.54225 8.08348L7.59293 8.08188L8.82197 8.04361C8.91321 8.21681 9.03153 8.37937 9.17708 8.52492C9.27952 8.62741 9.39059 8.716 9.5077 8.79156L9.1763 9.92861L9.14232 10.0452C9.03083 10.0264 8.9168 10.0197 8.80203 10.0266C8.37147 10.0523 7.97164 10.2615 7.70508 10.6006L4.41572 14.7851C4.23264 15.0181 4.2525 15.3511 4.46199 15.5605L4.58897 15.6875L5.78633 16.8849C5.89638 16.9949 6.04536 17.0563 6.20004 17.0563C6.21163 17.0563 6.22329 17.0559 6.23496 17.0552C6.40196 17.0453 6.55676 16.9643 6.66014 16.8327L10.0799 12.4823C10.4868 11.9648 10.5075 11.2558 10.1644 10.721L10.3019 10.2495L10.6342 9.10923C11.1327 9.09889 11.6281 8.9045 12.0076 8.52492C12.5144 8.01813 12.6917 7.30505 12.5403 6.65353C12.7803 5.39629 13.4485 2.93824 15.1221 1.79304ZM11.18 7.69742C10.8559 8.02149 10.3287 8.02149 10.0046 7.69742C9.68052 7.37336 9.68052 6.84605 10.0046 6.52202C10.1666 6.35997 10.3794 6.27899 10.5923 6.27899C10.8051 6.27899 11.018 6.36001 11.18 6.52202C11.5041 6.84609 11.5041 7.37336 11.18 7.69742Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        id={"6"}
                        year={getDataCurrentYear()}
                        data={data}
                        //text={"Обрезка/прищ"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="15" height="19" viewBox="0 0 15 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M7.12682 7.27774H5.85437V5.98552C5.85437 5.66113 5.59138 5.39814 5.26699 5.39814H5.05174V4.36201L6.12903 3.36155C6.30602 3.19721 6.36433 2.94127 6.27603 2.71642C6.18772 2.49157 5.97083 2.34375 5.7293 2.34375H3.24987C2.92548 2.34375 2.66249 2.60674 2.66249 2.93113V5.3981H2.4472C2.12281 5.3981 1.85983 5.66109 1.85983 5.98548V7.2777H0.587375C0.262987 7.2777 0 7.54069 0 7.86508V17.9288C0 18.2532 0.262987 18.5162 0.587375 18.5162H7.12682C7.45121 18.5162 7.7142 18.2532 7.7142 17.9288V7.86508C7.7142 7.54073 7.45121 7.27774 7.12682 7.27774Z"
                                      fill={color}/>
                                <Path d="M12.4213 0.873628C12.2943 0.575085 11.9491 0.436229 11.6509 0.563102L7.35642 2.39059C7.13972 2.4828 6.99902 2.69555 6.99902 2.93109C6.99902 3.16663 7.13972 3.37934 7.35642 3.47159L11.6509 5.29908C11.7259 5.33099 11.8039 5.34611 11.8806 5.34611C12.109 5.34611 12.3262 5.21203 12.4213 4.98855C12.5483 4.69008 12.4093 4.3451 12.1108 4.21811L9.08648 2.93109L12.1108 1.64407C12.4093 1.51704 12.5483 1.17209 12.4213 0.873628Z"
                                      fill={color}/>
                                <Path d="M13.7437 2.34375H13.1694C12.845 2.34375 12.582 2.60674 12.582 2.93113C12.582 3.25552 12.845 3.5185 13.1694 3.5185H13.7437C14.0681 3.5185 14.3311 3.25552 14.3311 2.93113C14.3311 2.60674 14.0681 2.34375 13.7437 2.34375Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        text={"Подкормка / обработка от вредителей"}
                    />
                    <AppCalendarListItem
                        Icon={({active}) => {
                            let color = svgColor
                            if(active) color = "#fff"

                            return <Svg width="14" height="19" viewBox="0 0 14 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <Path d="M5.09158 15.3213C4.52808 15.3213 4.07129 16.8184 4.07129 17.3819C4.07129 17.9454 4.52808 18.4022 5.09158 18.4022C5.65509 18.4022 6.11188 17.9454 6.11188 17.3819C6.11188 16.8185 5.65509 15.3213 5.09158 15.3213Z"
                                      fill={color}/>
                                <Path d="M9.20584 12.7607C8.64234 12.7607 8.18555 14.2579 8.18555 14.8213C8.18555 15.3848 8.64234 15.8416 9.20584 15.8416C9.76934 15.8416 10.2261 15.3848 10.2261 14.8213C10.2261 14.2579 9.76934 12.7607 9.20584 12.7607Z"
                                      fill={color}/>
                                <Path d="M11.1936 4.30169C11.1854 4.29377 11.1775 4.2856 11.1691 4.27784L7.2783 0.670582C6.94031 0.357 6.41838 0.307424 6.02297 0.579953C5.5653 0.895376 5.45002 1.52206 5.76544 1.97973L7.37341 4.31281H2.49418C1.94171 4.31281 1.49385 4.76068 1.49385 5.31314C1.49385 5.80802 1.85329 6.21871 2.32532 6.29898H1.00033C0.447866 6.29898 0 6.74685 0 7.29931C0 7.85177 0.447866 8.29963 1.00033 8.29963H1.73805C1.31983 8.41947 1.01365 8.8044 1.01365 9.26111C1.01365 9.81357 1.46152 10.2614 2.01398 10.2614H3.40139C3.22561 10.419 3.11434 10.647 3.11434 10.9016C3.11434 11.3768 3.4995 11.7619 3.97462 11.7619H4.54825C4.41008 11.4758 4.33258 11.1552 4.33258 10.8168C4.33258 10.3593 4.48471 9.69725 4.7201 9.13023C5.24663 7.86197 5.98584 7.59576 6.51325 7.59576C7.04066 7.59576 7.77986 7.86197 8.30639 9.13023C8.54179 9.69725 8.69392 10.3593 8.69392 10.8168C8.69392 11.1552 8.61642 11.4758 8.47825 11.7619H11.1231C12.6586 11.7619 13.3739 10.6037 13.3739 9.41184V6.74028C13.3739 5.47747 12.42 4.43793 11.1936 4.30169Z"
                                      fill={color}/>
                                <Path d="M6.51346 8.75586C5.94995 8.75586 5.49316 10.253 5.49316 10.8165C5.49316 11.38 5.94995 11.8368 6.51346 11.8368C7.07696 11.8368 7.53375 11.38 7.53375 10.8165C7.53375 10.253 7.07696 8.75586 6.51346 8.75586Z"
                                      fill={color}/>
                            </Svg>
                        }}
                        screenWidth={screenWidth}
                        text={"Посадка в грунт / Посадка на рассаду"}
                    />
                </View>
                <View style={styles.yearsWrap}>
                    <View style={styles.yearsTitle}>
                        <AppTextBold style={styles.yearsBold}>
                            Возраст растения
                        </AppTextBold>
                        <Svg width="10" height="12" viewBox="0 0 5 7" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <Path d="M0.000395864 4.95837C0.000429239 5.03573 0.0308624 5.1099 0.0850292 5.1646L1.81826 6.9146C1.93106 7.02847 2.11393 7.02847 2.22673 6.9146L3.95993 5.1646C4.0694 5.05013 4.06783 4.86823 3.95643 4.75573C3.845 4.64323 3.66483 4.64163 3.55146 4.75217L2.0225 6.29597L0.493496 4.75217C0.410896 4.66877 0.286663 4.64383 0.178729 4.68897C0.0707959 4.7341 0.000429248 4.84043 0.000395864 4.95837Z" fill="black"/>
                            <Path d="M1.73376 0.291666L1.73376 6.70833C1.73376 6.8694 1.86309 7 2.02266 7C2.18219 7 2.31152 6.8694 2.31152 6.70833L2.31152 0.291667C2.31152 0.1306 2.18219 -5.65335e-09 2.02266 -1.26268e-08C1.86309 -1.96017e-08 1.73376 0.1306 1.73376 0.291666Z" fill="black"/>
                        </Svg>
                    </View>
                    <AppCalendarYear
                        text={"1"}
                        year={year}
                        onResult={id => {
                            setYear(id)
                        }}
                        //bgColor={THEME.YELLOW}
                    />
                    <AppCalendarYear
                        text={"2"}
                        year={year}
                        onResult={id => {
                            setYear(id)
                        }}
                    />
                    <AppCalendarYear
                        text={"3"}
                        year={year}
                        onResult={id => {
                            setYear(id)
                        }}
                    />
                    <AppCalendarYear
                        text={"4"}
                        year={year}
                        onResult={id => {
                            setYear(id)
                        }}
                    />
                </View>
            </View>
            <AppCalendarPeriod
                data={getDataCurrentYear()}
            />
        </AppWrap>
    )
}

const styles = StyleSheet.create({
    yearsTitle: {
        width: 50,
        justifyContent: "center",
        alignItems: "center"
    },
    yearsBold: {
        fontSize: 12,
        textAlign: "center",
        marginBottom: 5
    },
    title: {
        textAlign: "center"
    },
    container: {
        flexDirection: "row"
    },
    actionList: {
        width: "78%"
    },
    yearsWrap: {
        width: "22%",
        alignItems: "center",
        justifyContent: "space-around",
        paddingBottom: 20
    }
})

const Stack = createStackNavigator()

const pageScreen = ({navigation, route}) => {
    //console.log('StackPageScreen', route.params)
    return (
        <Stack.Navigator>
            <Stack.Screen name={"StackPageScreen"} component={pageWrapper} />
        </Stack.Navigator>
    )
}

//Tabs
const Tab = createBottomTabNavigator();

const PageTab = ({navigation, route}) => {
    //console.log('InsideTabs', route.params)
    return (
        <Tab.Navigator tabBar={() => {
            return <BottomMenu />
        }}
        >
            <Tab.Screen name={"InsideTabs"} component={pageScreen} />
        </Tab.Navigator>
    )
}

//Drawers
const Drawer = createDrawerNavigator()

export default ({route}) => {
    globalRouteFun(route)
    return (
        <>
            <Drawer.Navigator
                screenOptions={() => ({
                    headerShown: false
                })}
                drawerContent={AppDrawerContentHandler} drawerPosition="left"
            >
                <Drawer.Screen name="InsidePageScreen" component={PageTab} />
            </Drawer.Navigator>
            <AppIndicator timer={2} />
        </>
    )
}
