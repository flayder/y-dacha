import React, {createRef, useEffect} from "react"
import {View, StyleSheet, ScrollView, TouchableOpacity} from "react-native"
import {useNavigation, useRoute} from "@react-navigation/native";
import SWGImage from "expo-svg-uri";
import {AppText} from "../AppText";
import {THEME} from "../../../theme";
import {CHEMICAL, getRandomKey, KLUMBA, LinkTo, OGOROD, SAD, SHADOW} from "../../../global";
import {Svg, Path} from "react-native-svg";

export default () => {
    const route = useRoute()
    const navigation = useNavigation()
    const scrollRef = createRef()
    let index = 1
    const data = [
        {
            text: "Сад",
            Img: () => {
                return <Svg width="24" height="28" viewBox="0 0 24 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path d="M12.7789 5.06618C12.7789 4.46111 13.0592 3.89009 13.5359 3.51814L15.7715 1.84307C15.9732 1.67543 16.0073 1.37944 15.8501 1.16989L15.2359 0.384086C15.156 0.279312 15.0381 0.211208 14.9085 0.195492C14.7788 0.178467 14.6465 0.215138 14.5444 0.296338L12.1372 2.11941C11.299 2.76901 10.8105 3.77091 10.8157 4.83175V8.04962H12.7815V5.06749L12.7789 5.06618Z" fill="#60A04E"/>
                    <Path d="M4.11091 5.59126C5.49131 6.35742 7.62477 6.98214 9.02482 6.24479L5.12853 3.53769C4.9216 3.37791 4.87707 3.08323 5.02637 2.86844C5.17568 2.65366 5.46643 2.59341 5.68907 2.73093L9.6993 5.53625C9.79491 5.31492 9.84074 5.07525 9.83158 4.83427C9.79228 3.58615 8.535 1.97001 6.66216 0.90262C4.79063 -0.163457 1.54132 0.184917 0.210693 0.381369C0.987332 2.15074 2.42667 4.65615 4.11222 5.58995L4.11091 5.59126Z" fill="#60A04E"/>
                    <Path d="M21.8583 7.50191C19.9213 5.03187 16.4441 4.39929 13.7606 6.02853V8.04805H14.2517C14.5228 8.04805 14.7429 8.26807 14.7429 8.53918C14.7429 8.81028 14.5228 9.03031 14.2517 9.03031H9.33782C9.06672 9.03031 8.84669 8.81028 8.84669 8.53918C8.84669 8.26807 9.06672 8.04805 9.33782 8.04805H9.82895V6.89291C8.10934 8.18033 4.95957 7.38404 3.20068 6.18045C0.650736 7.86076 -0.0473229 10.6032 0.00244477 13.6797C0.0391157 16.5596 0.728006 19.3938 2.01673 21.9699C3.3526 24.6037 6.35961 28.5982 9.07719 27.5269C9.50153 27.3579 9.89705 27.1261 10.252 26.8393C11.1517 26.1124 12.4378 26.1124 13.3376 26.8393C14.7429 27.9643 16.2162 28.0625 17.9411 26.6716C20.8053 24.381 23.4836 19.4972 23.5871 13.6797C23.6316 10.9228 23.096 9.03162 21.857 7.50322L21.8583 7.50191ZM1.50988 9.841C1.5793 9.65371 1.65264 9.47691 1.73515 9.30534C1.85433 9.06043 2.14901 8.95958 2.39391 9.08007C2.63882 9.19925 2.73967 9.49393 2.61918 9.73884C2.54977 9.88159 2.4869 10.0283 2.42797 10.1854C2.37427 10.3596 2.22759 10.4893 2.04816 10.5233C1.86873 10.5574 1.68669 10.488 1.57275 10.3452C1.46012 10.2025 1.43523 10.0086 1.50857 9.84231L1.50988 9.841ZM4.18817 22.7885C4.07685 22.8566 3.94195 22.8775 3.81491 22.8461C3.68787 22.8147 3.57786 22.7335 3.51107 22.6208C1.60156 19.3925 0.742414 15.6507 1.05412 11.9142C1.07114 11.7387 1.18115 11.5855 1.34225 11.5135C1.50334 11.4414 1.69062 11.4598 1.83337 11.5632C1.97744 11.6667 2.0534 11.8383 2.03637 12.0137C1.74039 15.5407 2.5537 19.0729 4.36105 22.1166C4.49988 22.3497 4.4226 22.6509 4.18817 22.7898V22.7885Z" fill="#60A04E"/>
                </Svg>
            },
            href: "CulturesPageScreen",
            params: {
                type: SAD
            }
        },
        {
            text: "Огород",
            Img: () => {
                return <Svg width="22" height="32" viewBox="0 0 22 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path fillRule="evenodd" clipRule="evenodd" d="M2.19889 10.5213C2.06363 11.019 1.92316 11.919 2.37404 12.2589C2.87 12.6317 3.48562 11.7751 3.63649 11.3589L3.66597 11.43C3.68678 11.4751 3.68678 11.4855 3.71626 11.534C3.85499 11.7595 4.13939 11.7404 4.33362 11.5843C4.57813 11.3884 4.75675 11.0207 4.77062 10.6669C5.37584 11.3658 5.7244 10.8386 5.92729 10.0929C5.95677 10.1693 5.97758 10.0444 5.93596 10.2629C6.62615 10.4346 6.84292 9.53629 8.63602 10.7276L9.37303 11.312C9.27072 11.4872 9.14759 11.5392 8.99325 11.6398C8.84238 11.7386 8.71579 11.8496 8.56839 11.9641C8.28746 12.1809 8.01 12.4219 7.75681 12.6855C6.95044 13.5265 5.13479 15.6439 6.0192 16.8509C6.862 18.0006 7.77242 19.1226 8.70018 20.2082L9.43026 21.0128C10.802 22.3499 10.2366 21.5227 12.5257 20.2689C12.6939 20.1752 12.8309 20.1354 13.0182 20.0608C13.2558 19.9654 13.8228 19.7504 14.0691 19.7608C13.8072 19.988 13.5783 20.1579 13.3147 20.4267C12.7858 20.9677 12.3193 21.5764 12.0107 22.2718C11.5355 23.3435 11.8286 23.373 12.5448 24.169C12.7876 24.4395 13.0199 24.6771 13.2662 24.9355L17.8877 29.3228C18.5726 29.935 20.4386 31.5529 21.29 31.794C21.2952 31.7957 21.4374 31.8269 21.4409 31.8269C21.9091 31.8824 21.9716 31.3951 21.9906 31.0362C22.1224 28.6188 20.8305 24.1499 20.142 21.6146C20.0883 21.4186 20.0033 20.9123 19.8663 20.8099C19.5126 20.5429 18.4651 20.7891 18.0229 20.8741C17.716 20.9313 17.4871 21.0597 17.1628 21.0475C17.4784 20.7111 17.7559 20.366 18.1981 20.1856C19.2854 19.74 19.8871 19.7747 19.4241 18.1394C19.0738 16.9099 18.9212 16.1694 18.3351 14.9641C17.9674 14.2081 17.5339 14.0745 16.4622 14.2445C16.2402 14.2792 16.0235 14.3138 15.7963 14.378C15.5466 14.4456 15.3697 14.5306 15.1408 14.6069C15.3628 13.7919 16.1483 13.5075 16.8004 13.1572C17.6154 12.7167 17.5929 13.145 16.7726 10.7502C16.6408 10.3635 16.3894 10.1727 15.9472 9.9993C14.4853 9.42877 12.1633 9.96462 10.8037 10.6063C10.6216 10.693 10.5124 10.7849 10.2939 10.7831L10.1655 9.85364C10.1447 9.45652 10.1361 9.30391 10.1898 8.8357C10.2314 8.46286 10.3996 8.09522 10.606 7.89059C10.7603 7.73798 11.1731 7.5455 11.0638 7.29405C11.0586 7.28537 11.0482 7.26977 11.043 7.2611L10.9945 7.19693C11.7384 7.39983 12.3696 7.36861 12.0766 6.49114C12.3904 6.66108 12.7598 6.67322 13.0511 6.59172C13.2801 6.52755 13.4847 6.30385 13.3772 6.0576L13.2488 5.86685C13.6789 5.94662 14.6778 5.85644 14.6691 5.27897C14.6622 4.80902 13.9043 4.37895 13.3095 4.21595C13.7344 3.87779 14.5061 4.046 14.6257 3.25003C14.7402 2.49047 14.0136 2.24249 13.3928 2.07255C13.45 1.86272 13.4552 1.91127 13.4257 1.74826C13.1951 1.70491 13.0789 1.7656 12.9089 1.8367C12.7182 1.91474 12.6297 2.01359 12.4199 1.9737C12.7251 1.61994 12.3956 1.51242 12.4026 1.51415C12.4043 1.51415 12.2118 1.39797 11.6552 1.78121C11.4575 1.91647 11.102 2.21128 11.0049 2.4766C10.9997 2.46446 10.9806 2.44365 10.9893 2.44192C10.9997 2.44018 10.9771 2.41417 10.9736 2.40724L10.854 2.21301C10.4916 2.21128 10.1777 2.68123 9.95397 2.93095C9.62275 3.29858 9.49962 3.51362 9.33141 4.13271C9.27245 4.00958 9.25684 3.92981 9.12852 3.85524C8.83371 4.17086 8.65857 4.63387 8.64469 5.13677C8.63776 5.37782 8.68631 5.4073 8.64816 5.61366L8.49209 5.57204C8.16607 6.17552 8.5077 7.16052 8.48342 7.84724C8.26838 7.60099 7.89381 6.07668 7.86086 5.67089C7.81751 5.12984 7.93369 4.27664 7.72213 3.87085C7.55912 3.55697 7.43946 3.77721 7.20536 3.77547C7.66143 2.10376 6.99726 1.36328 6.48569 1.67196L6.21863 1.89393C6.32094 1.51762 6.21169 0.960962 6.08337 0.704309C6.00186 0.539566 5.89261 0.402569 5.64289 0.34014C5.37237 0.272509 5.20242 0.334937 5.0897 0.530895C4.72033 0.184067 4.155 -0.289353 3.47695 0.230889C2.74861 0.791017 3.25672 1.47774 3.35903 1.78121C2.62029 1.59739 2.25612 2.81302 3.84806 3.24829C3.70759 3.36968 3.54805 3.41997 3.53591 3.6853C3.50123 4.44832 4.41512 4.6252 4.88334 4.75179C4.77582 4.94949 4.41339 5.23909 5.04982 5.83563C5.41052 6.17206 7.57646 7.62353 7.85046 8.33973C7.69785 8.25823 7.5071 8.09348 7.3805 7.99811C7.20709 7.86631 7.09784 7.79174 6.90361 7.65995C6.52904 7.4033 6.31574 7.1345 5.7955 7.11369L5.75388 7.26977C5.55445 7.19693 5.57873 7.15705 5.38277 7.04433C5.28219 6.98537 5.06369 6.87091 4.92669 6.82236C4.52958 6.67842 4.27292 6.72698 3.99546 6.78941L4.13246 7.10329C3.33475 6.88652 2.94284 6.95936 2.20236 7.16398C1.98559 7.22468 1.82432 7.24029 1.7064 7.44318L1.85727 7.70677C1.58327 7.65648 1.17401 7.80562 0.962449 7.89926C0.773427 7.9825 0.273995 8.1958 0.319083 8.45418C0.327753 8.5669 0.251451 8.54956 0.443941 8.64841C0.570533 8.71257 0.620824 8.68656 0.705797 8.67095C0.586141 8.99697 0.163009 8.9779 0 9.42357C0.124858 9.53109 0.0867082 9.50334 0.296539 9.56057C0.130062 10.1727 -0.0277455 10.934 0.684986 11.2201C1.17922 11.4178 1.5746 11.0727 1.88154 10.8039L2.20236 10.523L2.19889 10.5213Z" fill="#F39314"/>
                </Svg>
            },
            href: "CulturesPageScreen",
            params: {
                type: OGOROD
            }
        },
        {
            text: "Клумба",
            Img: () => {
                return <Svg width="19" height="28" viewBox="0 0 19 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path d="M16.608 12.9187H10.0424V9.51998H11.8253C15.102 9.51998 17.7676 6.85433 17.7676 3.57761V0.16626H14.3563C12.1732 0.16626 10.2608 1.3501 9.22818 3.10921C8.1951 1.3501 6.28372 0.16626 4.10007 0.16626H0.688723V3.57761C0.688723 6.85383 3.35437 9.51998 6.6311 9.51998H8.41341V12.9187H8.08518L6.43295 12.9167L1.84332 12.9172C0.825862 12.9172 0 13.7602 0 14.8029L0.56671 17.1191H17.8876L18.4543 14.8019C18.4538 13.7622 17.6295 12.9187 16.607 12.9187H16.608ZM1.14754 19.4893L1.74349 21.9246H16.7124L17.3083 19.4893H1.14754ZM2.0334 23.1094L2.76901 26.1144C3.16883 27.3703 4.16763 28 5.53752 28L12.9183 27.999C14.3472 27.999 15.3173 27.275 15.6869 26.1139L16.4225 23.1094H2.0334Z" fill="#AE4A84"/>
                </Svg>
            },
            href: "CulturesPageScreen",
            params: {
                type: KLUMBA
            }
        },
        {
            text: "События",
            Img: () => {
                return <Svg width="31" height="28" viewBox="0 0 31 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path d="M28.2222 0.167247H26.3668V2.02259C26.3668 3.04758 25.5377 3.87793 24.5115 3.87793L22.6574 3.87669C21.6312 3.87669 20.802 3.04512 20.802 2.02135V0.166016L9.66878 0.167247V2.02259C9.66878 3.04758 8.83967 3.87793 7.81344 3.87793L5.95811 3.87669C4.93188 3.87669 4.10277 3.04512 4.10277 2.02135V0.166016L2.24743 0.167247C1.2212 0.167247 0.39209 0.998823 0.39209 2.02259V26.1445C0.39209 27.1682 1.2212 27.9998 2.24743 27.9998L28.2234 27.9986C29.2496 27.9986 30.0787 27.1682 30.0787 26.1432V2.02135C30.0787 0.997591 29.2496 0.166016 28.2234 0.166016L28.2222 0.167247ZM11.5229 24.2879H7.81221V20.5772H11.5229V24.2879ZM11.5229 18.7219H7.81221V15.01H11.5229V18.7219ZM11.5229 13.1546H7.81221V9.44271L11.5229 9.44394V13.1546ZM17.0889 24.2879H13.3782V20.5772H17.0889V24.2879ZM17.0889 18.7219H13.3782V15.01H17.0889V18.7219ZM17.0889 13.1546H13.3782V9.44271L17.0889 9.44394V13.1546ZM22.6562 24.2879H18.9442V20.5772H22.6562V24.2879ZM22.6562 18.7219H18.9442V15.01H22.6562V18.7219ZM22.6562 13.1546H18.9442V9.44271L22.6562 9.44394V13.1546Z" fill="#A9C0EB"/>
                </Svg>
            },
            href: "EventsPageScreen",
            params: {}
        },
        {
            text: "Магазины",
            Img: () => {
                return <Svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path d="M27.3143 13.0665C27.6523 12.6898 27.621 12.1104 27.2442 11.7723L14.3864 0.234345C14.0381 -0.0781151 13.5105 -0.0781151 13.1622 0.234345L0.304405 11.7723C-0.0723313 12.1104 -0.103675 12.6899 0.234386 13.0665C0.572386 13.4433 1.15185 13.4746 1.52859 13.1366L3.82414 11.0766L6.75225 26.167H5.58495C5.0788 26.167 4.66846 26.5773 4.66846 27.0835C4.66846 27.5896 5.0788 27.9999 5.58495 27.9999H21.9636C22.4698 27.9999 22.8801 27.5896 22.8801 27.0835C22.8801 26.5773 22.4698 26.167 21.9636 26.167H20.7963L23.7245 11.0766L26.02 13.1365C26.1951 13.2936 26.4138 13.3709 26.6319 13.3709C26.883 13.3709 27.1333 13.2682 27.3143 13.0665ZM13.964 22.3191C13.2611 22.3191 12.6912 21.7492 12.6912 21.0463C12.6912 20.3433 13.2611 19.7734 13.964 19.7734C14.667 19.7734 15.2368 20.3433 15.2368 21.0463C15.2368 21.7493 14.667 22.3191 13.964 22.3191ZM13.7743 17.4793C11.8653 17.4793 10.3177 15.9317 10.3177 14.0227C10.3177 12.1138 11.8653 10.5662 13.7743 10.5662C15.6833 10.5662 17.2309 12.1138 17.2309 14.0227C17.2309 15.9318 15.6833 17.4793 13.7743 17.4793Z" fill="#53588A"/>
                </Svg>
            },
            href: "ShopsAllPageScreen",
            params: {}
        },
        {
            text: "Химикаты",
            Img: () => {
                return <Svg width="33" height="32" viewBox="0 0 33 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path fillRule="evenodd" clipRule="evenodd" d="M16.6573 13.0255C17.0655 13.6346 17.5735 14.3225 17.2066 15.2657C16.9233 15.9931 16.1744 16.595 15.4048 16.595C14.8291 16.595 14.1974 16.1882 13.7768 15.906C13.6535 16.367 13.1144 16.8108 12.671 17.0547C11.9786 17.4348 11.1067 17.1502 10.566 16.6115C10.0095 16.057 9.95687 15.7746 9.95687 14.9668C9.95687 14.667 10.0488 14.3529 10.1447 14.1527C9.36965 13.7806 8.26612 13.3977 8.26612 11.961C8.26612 10.5014 9.53537 10.1799 10.7082 10.0819C10.7082 9.67421 10.7084 9.37936 10.7969 9.04343C10.8699 8.76483 11.0055 8.46953 11.1636 8.28283C11.7032 7.6464 12.6696 7.36577 13.5287 7.76267C13.8461 7.90941 14.273 8.39819 14.4464 8.72397C14.5762 8.96757 14.609 9.16985 14.716 9.39313C15.6127 8.91858 16.5808 8.92738 17.3003 9.75255C18.4472 11.0681 17.5502 12.7866 16.6575 13.0252L16.6573 13.0255ZM9.36333 0.000225295H9.76339C10.2081 0.0431204 10.645 0.227118 11.0717 0.513838C11.4614 0.775499 11.8079 1.00465 12.1985 1.26541L25.7249 10.2826C26.1116 10.5405 26.4823 10.7547 26.7582 11.1279C27.6188 12.2906 27.2222 13.2092 26.5512 14.2155L23.8585 18.2857C22.0863 18.2857 21.3609 18.3693 20.477 20.039C19.7604 19.8722 20.2201 19.6634 18.849 19.6634C17.8496 19.6634 17.198 20.5642 16.9705 21.5419C16.6691 21.4717 16.5783 21.3541 16.1563 21.3541C15.0709 21.3541 13.7768 22.3761 13.7768 23.7334C13.5637 23.6765 12.2398 22.7502 11.9483 22.5561L1.17646 15.3556C0.271594 14.7543 0.00835327 14.2042 0 13.1986V13.1505C0 12.5317 0.646363 11.6801 0.926761 11.2595L6.5379 2.78051C6.99349 2.10028 7.70803 0.766017 8.36952 0.353998C8.70478 0.145392 9.03598 0.03251 9.36356 0L9.36333 0.000225295Z" fill="#E96C6C"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M13.0876 14.8414C16.4781 14.8414 16.2101 10.145 13.2129 10.145C12.003 10.145 10.9246 11.1002 10.8772 12.4252C10.8329 13.6514 11.8292 14.8416 13.0876 14.8416V14.8414Z" fill="#E96C6C"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M29.0562 31.9998H29.9956C30.718 31.9998 32.1198 31.5992 32.0225 30.9655C31.8148 29.6114 27.0426 29.729 26.9617 30.9436C26.9173 31.6092 28.296 32 29.0562 32V31.9998Z" fill="#E96C6C"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M21.479 22.2934C21.479 23.2565 22.0457 23.8918 22.6846 24.5323C23.5542 25.404 25.3617 26.4107 25.3617 25.1741C25.3617 24.0485 23.2802 21.9177 21.9802 21.9177C21.7513 21.9177 21.479 22.0904 21.479 22.2934Z" fill="#E96C6C"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M27.3027 26.3641C27.3027 28.917 28.3704 28.9967 29.0483 27.2326C29.7807 25.3253 29.1745 22.6598 28.099 23.8416C27.684 24.2977 27.3027 25.4956 27.3027 26.3643V26.3641Z" fill="#E96C6C"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M21.3545 27.4282C21.3545 28.3807 23.5232 29.4323 24.6107 29.4323C24.9884 29.4323 25.4927 29.4707 25.7009 29.0765C26.1714 28.1874 23.9977 27.0085 22.7904 26.8681C22.2501 26.8049 21.3545 26.7845 21.3545 27.4282Z" fill="#E96C6C"/>
                </Svg>
            },
            href: "ChemicalPageScreen",
            params: {
                type: CHEMICAL
            }
        },
        {
            text: "Уют",
            Img: () => {
                return <Svg width="19" height="35" viewBox="0 0 19 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <Path d="M8.75977 13.0004V5.14258H9.79774V13.0004H8.75977Z" fill="#75AEA4"/>
                    <Path d="M15.5002 6.68736C15.0478 8.172 14.4223 9.42926 13.4309 10.1783C12.4063 10.954 11.0423 11.1814 9.16594 10.5595L8.75342 10.4257L8.8133 9.9977C9.09941 8.02487 9.9045 6.90137 11.0556 6.32624C12.1667 5.77117 13.564 5.77117 15.0877 6.0253L15.6732 6.12561L15.5002 6.69405V6.68736Z" fill="#75AEA4"/>
                    <Path d="M4.46833 0.0200626C6.01198 0.0802505 7.38263 0.361127 8.36072 1.12351C9.37208 1.91932 9.94429 3.17658 9.83118 5.16947L9.80457 5.60416L9.37873 5.65766C7.40925 5.89173 6.12509 5.39685 5.27343 4.42715C4.45503 3.4909 4.08908 2.13333 3.9427 0.588504L3.88281 0L4.46833 0.0200626Z" fill="#75AEA4"/>
                    <Path fillRule="evenodd" clipRule="evenodd" d="M18.9852 25H0.553711C0.644209 26.0906 1.29061 26.2686 2.07987 26.2686H8.22785V32.4546H5.91903C5.49319 32.4546 5.1472 32.8024 5.1472 33.2304C5.1472 33.6584 5.49319 34.0061 5.91903 34.0061H13.6107C14.0365 34.0061 14.3825 33.6584 14.3825 33.2304C14.3825 32.8024 14.0365 32.4546 13.6107 32.4546H11.3018V26.2686H17.4498C18.2355 26.2686 18.925 26.0296 18.9852 25ZM14.3891 12.3585L18.7302 24H0.812781L5.15386 12.3585C5.75934 11.2752 6.16521 10.8137 7.46268 10.8137H8.99967V10.038C8.99967 9.60996 9.34566 9.26221 9.77149 9.26221C10.1973 9.26221 10.5433 9.60996 10.5433 10.038V10.8137H12.0803C13.3645 10.8137 13.8635 11.3019 14.3891 12.3585Z" fill="#75AEA4"/>
                </Svg>
            },
            href: "MasterPageScreen",
            params: {}
        }
    ]
    if(route.params !== undefined && route.params.hasOwnProperty('type')) {
        data.map((item, i) => {
            if(item.params !== undefined && item.params.hasOwnProperty('type') && item.params.type === route.params.type)
                index = i
        })
    }
    useEffect(() => {
        if (scrollRef.current && index > 1) {
            setTimeout(() => {
                scrollRef.current.scrollTo({ x: (index - 1) * 110 })
            }, 500)
        }
    })

    const isActive = (item) => {
        return item.params !== undefined &&
            route.params !== undefined &&
            item.params.hasOwnProperty('type') &&
            route.params.hasOwnProperty('type') &&
            item.params.type === route.params.type
    }

    return (
        <ScrollView
            ref={scrollRef}
            horizontal={true}
            contentContainerStyle={styles.area}
        >
            <View style={{...styles.wrap}}>
                {
                    data.map(item => {
                        const active = isActive(item)
                        const Image = item.Img
                        let activeBorder = {}
                        if(active) {
                            activeBorder.borderColor = THEME.CHEMICAL_COLOR
                        }
                        return <TouchableOpacity key={getRandomKey()} style={styles.btnWrap} activeOpacity={1} onPress={() => {
                            LinkTo(item.href, item.params, navigation)
                        }}>
                            <View style={{...styles.item, ...activeBorder}}>
                                <View style={styles.imgWrap}>
                                    <Image />
                                </View>
                                <AppText style={styles.text}>{item.text}</AppText>
                            </View>
                        </TouchableOpacity>
                    })
                }
            </View>
        </ScrollView>
    )
}

const styles = StyleSheet.create({
    area: {
        minWidth: "100%"
        //justifyContent: "center"
    },
    wrap: {
        paddingLeft: 5,
        paddingRight: 5,
        paddingTop: 20,
        paddingBottom: 20,
        flexDirection:'row',
        justifyContent: 'center',
        backgroundColor: THEME.SLIDER_BG,
        marginLeft: "auto",
        marginRight: "auto"
    },
    slider: {
        width: "100%",
        height: 50
    },
    item: {
        ...SHADOW,
        width: "100%",
        justifyContent: "center",
        alignItems: "center",
        textAlign: "center",
        borderRadius: 4,
        padding: 5,
        paddingRight: 3,
        paddingLeft: 3,
        height: 90,
        //padding: 20,
        marginLeft: 5,
        marginRight: 5,
        paddingTop: 20,
        backgroundColor: "white",
        borderStyle: "solid",
        borderColor: "transparent",
        borderWidth: 1
    },
    img: {
        marginLeft: "auto",
        marginRight: "auto"
    },
    btnWrap: {
        marginLeft: 0,
        marginRight: 0,
        width: 75,
        height: 80,
        padding: 5,
        alignItems: "center",
        justifyContent: "center",
    },
    imgWrap: {
        marginBottom: 10,
        height: 30
    },
    text: {
        textAlign: "center",
        maxHeight: 50,
        marginTop: 5,
        fontSize: 12
    }
})